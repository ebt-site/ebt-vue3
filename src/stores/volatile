import { defineStore } from 'pinia'
import { SuttaRef } from "scv-esm";
import { default as SuttaDuration } from '../sutta-duration.mjs';
import { logger } from "log-instance";
import Utils from "../utils.mjs";

const suttas = new Map();
const suttaDuration = await new SuttaDuration({fetch}).initialize();
const INITIAL_STATE = {
  waiting: false,
  suttas,
  suttaDuration,
};

export const useVolatileStore = defineStore('volatile', {
  state: () => {
    let s = Object.assign({}, INITIAL_STATE);
    console.debug(`VolatileStore.state() => `, s);
    return s;
  },
  getters: {
  },
  actions: {
    addMlDoc(mld) {
      let { sutta_uid, lang, author_uid:author } = mld || {};
      let suttaRef = new SuttaRef({sutta_uid, lang, author});
      suttas[suttaRef.toString()] = mld;
    },
    async fetchJson(url, options) {
      let res;
      if (this.waiting) {
        throw new Error("fetchJson() waiting... (request ignored)");
      }
      try {
        console.log('fetchJson() url:', url);
        this.waiting = true;
        res = await fetch(url, options);
        console.log('fetchJson()', res);
        return res.ok ? await res.json() : res;
      } catch(e) {
        console.error("fetchJson() ERROR:", res, e);
        res = { error: `ERROR: ${url.value} ${e.message}` };
      } finally {
        this.waiting = false;
      }
      return res;
    },
  },
})
